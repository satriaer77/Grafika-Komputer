#ifdef _APPLE_
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <stdlib.h>
#include <math.h>

void myinit()
{
	glClearColor(0.0, 0.0, 0.0, 1.0);
	glColor3f(1.0, 0.0, 0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(-1.0, 10.0, -10.0, 10.0);
	glMatrixMode(GL_MODELVIEW);
}

void display(void)
{
    int scale= 3;
    int vert = -4;
    float horz = -1.5;
    glClear (GL_COLOR_BUFFER_BIT);

    //////////////////////------------ JUVENTUS ------------//////////////////////
    // glColor3f (1.0, 1.0, 1.0);
    // int lenArr = 24;
    // float arrPoly[lenArr][2] =
    //     {
    //         {1.9486485612623, 2.676220877303},
    //         {1.9486416842914, 2.4833442246869},
    //         {2.3865745799206, 2.4815889447971},
    //         {2.3891172481159, 1.7315018271954},
    //         {2.3738612389443, 1.6603071177281},
    //         {2.3586052297727, 1.6069110856277},
    //         {2.3052091976723, 1.5458870489415},
    //         {2.2416424927908, 1.5001190214268},
    //         {2.1475637695662, 1.4492656575216},
    //         {2.0661983873179, 1.4111256345927},
    //         {2.0049214217438, 1.3822833656935},
    //         {2.0420428700996, 1.2987240797685},
    //         {2.0750099406672, 1.2492734739172},
    //         {2.1128414584023, 1.2005092640716},
    //         {2.2351109879645, 1.2521341765534},
    //         {2.3510406159939, 1.315533191882},
    //         {2.433459335921, 1.3707809052397},
    //         {2.5195008567241, 1.445048323196},
    //         {2.5584459661402, 1.5111644391815},
    //         {2.5838055722716, 1.5636950518824},
    //         {2.6010138764323, 1.6343396689628},
    //         {2.6063955210557, 1.6844623026096},
    //         {2.6106674572381, 1.7624251379378},
    //         {2.6115839888088, 2.6768515247459}
    //     };
    // glBegin(GL_TRIANGLE_FAN);
    //     for(int i=0;i<lenArr;i++)
    //     {
    //         glVertex2d(arrPoly[i][0]*scale+horz,arrPoly[i][1]*scale-down);
    //     }
    // glEnd();
    // glFlush ();

    //////////////////////------------ END JUVENTUS ------------//////////////////////



    //////////////////////------------ SALFORD ------------//////////////////////

    //////////////////////------------ RED EMBLEM ------------//////////////////////
    glColor3f (1.0, 0.0, 0.0);
    int lenArr = 7;
    float arrPoly[lenArr][2] =
        {
            {1.9810462965079, 3.4889457673096},
            {2.7426710475413, 3.033554397987},
            {2.7426710475413, 3.033554397987},
            {2.9387058115994, 1.7601406129503},
            {1.983544845435, 0.4247252027302},
            {1.0249087929475, 1.7650008745265},
            {1.2277258391573, 3.0362291463056}
        };
    glBegin(GL_POLYGON);
        for(int i=0;i<lenArr;i++)
        {
            glVertex2d(arrPoly[i][0]*scale+horz,arrPoly[i][1]*scale+vert);
        }
    glEnd();
    glFlush ();

    //////////////////////------------ END RED EMBLEM ------------//////////////////////


    //////////////////////------------ BLACK EMBLEM ------------//////////////////////
    glColor3f (0.0, 0.0, 0.0);
    glBegin(GL_POLYGON);
        for(int i=0;i<lenArr;i++)
        {
            glVertex2d(arrPoly[i][0]*(scale-0.15)+horz+0.3,arrPoly[i][1]*(scale-0.15)+vert+0.3);
        }
    glEnd();
    glFlush ();

    //////////////////////------------ END BLACK EMBLEM ------------//////////////////////



    //////////////////////------------ LION FACE 1 ------------//////////////////////
    glColor3f (1.0, 1.0, 1.0);
    int lenArr1 = 11;
    float lionFace1[lenArr1][2] =
        {
            {1.8436844432425, 2.554201225588},
            {1.7451656713386, 2.6151059484646},
            {1.4709969999582, 2.6151059484646},
            {1.584328150927, 2.7964946039353},
            {1.8081835450588, 2.9301953170659},
            {1.9808702715462, 2.8237952662843},
            {2.1551910574924, 2.9285584891771},
            {2.3767298756067, 2.7968358622147},
            {2.4924164323105, 2.6159689741526},
            {2.2139496763508, 2.612556391359},
            {2.1211274243642, 2.5565900335435},
        };
    glBegin(GL_POLYGON);
        for(int i=0;i<lenArr1;i++)
        {
            glVertex2d(lionFace1[i][0]*scale+horz,lionFace1[i][1]*scale+vert);
        }
    glEnd();
    glFlush ();

    //////////////////////------------ END LION FACE 1 ------------//////////////////////




    //////////////////////------------ LION FACE 1_2 ------------//////////////////////
    int lenArr1_2 = 10;
    float lionFace1_2[lenArr1_2][2] =
        {
            {2.1344364972593, 2.4484111589856},
            {2.1912012710469, 2.5119857914678},
            {2.2941453720009, 2.5067663247566},
            {2.4313312003047, 2.5767242720259},
            {2.4582906043743, 2.410190231697},
            {2.3295132276537, 2.3041086495854},
            {2.1514994112274, 2.3078127478883},
            {1.80654671717, 2.3122927890296},
            {1.8436844432425, 2.554201225588},
            {2.1211274243642, 2.5565900335435},

        };
    glBegin(GL_POLYGON);
        for(int i=0;i<lenArr1_2;i++)
        {
            glVertex2d(lionFace1_2[i][0]*scale+horz,lionFace1_2[i][1]*scale+vert);
        }
    glEnd();
    glFlush ();

    //////////////////////------------ END LION FACE 1_2 ------------//////////////////////


    //////////////////////------------ LION FACE 1_3 ------------//////////////////////
    int lenArr1_3 = 9;
    float lionFace1_3[lenArr1_3][2] =
        {
            {2.1514994112274, 2.3078127478883},
            {2.3295132276537, 2.3041086495854},
            {2.3, 2.2},
            {2.3518180212132, 2.085312349744},
            {2.2804950408264, 1.9829348659352},
            {2.1658304387699, 1.9611932068739},
            {2.0217895845522, 2.0626765359819},
            {2.0471604168292, 2.1576125535344},
            {2.146380537037, 2.2487750655586}

        };
    glBegin(GL_POLYGON);
        for(int i=0;i<lenArr1_3;i++)
        {
            glVertex2d(lionFace1_3[i][0]*scale+horz,lionFace1_3[i][1]*scale+vert);
        }
    glEnd();
    glFlush ();

    //////////////////////------------ END LION FACE 1_3 ------------//////////////////////




    //////////////////////------------ LION FACE 2 ------------//////////////////////
    int lenArr2 = 7;
    float lionFace2[lenArr2][2] =
        {
            {1.5396687152354, 2.5051259801755},
            {1.5498078600185, 2.5659608488741},
            {1.6788878631065, 2.499047889279},
            {1.7459740616277, 2.5086316319249},
            {1.7701856219963, 2.3159479639918},
            {1.7010817934444, 2.4183426880505},
            {1.6082708120316, 2.4334749132808}
        };
    glBegin(GL_POLYGON);
        for(int i=0;i<lenArr2;i++)
        {
            glVertex2d(lionFace2[i][0]*scale+horz,lionFace2[i][1]*scale+vert);
        }
    glEnd();
    glFlush ();

    //////////////////////------------ END LION FACE 2 ------------//////////////////////

    //////////////////////------------ LION FACE 3 ------------//////////////////////
    float lionFace3[lenArr2][2] =
        {
            {1.818069689792, 2.2486289963904},
            {1.9197231682469, 2.155772453571},
            {1.9512803008562, 2.0648925111758},
            {1.8080216820496, 1.9627675551948},
            {1.681228468795, 1.9886306764961},
            {1.6094453787533, 2.0861685436718},
            {1.663634597524, 2.2026894436271}
        };
    glBegin(GL_POLYGON);
        for(int i=0;i<lenArr2;i++)
        {
            glVertex2d(lionFace3[i][0]*scale+horz,lionFace3[i][1]*scale+vert);
        }
    glEnd();
    glFlush ();

    //////////////////////------------ END LION FACE 3 ------------//////////////////////

    //////////////////////------------ LION FACE 4 ------------//////////////////////
    int lenArr3 = 9;
    float lionFace4[lenArr3][2] =
        {
            {1.8962735822704, 1.9656139265398},
            {2.0683315297226, 1.9638464975025},
            {2.2265357615985, 1.8657343516217},
            {2.2430253140614, 1.7291066312149},
            {2.056928936266, 1.4713984827235},
            {1.9820299418366, 1.5720646858295},
            {1.9075807039593, 1.4713984827235},
            {1.7144173751083, 1.739471492763},
            {1.7395635758711, 1.8693257107702}
        };
    glBegin(GL_POLYGON);
        for(int i=0;i<lenArr3;i++)
        {
            glVertex2d(lionFace4[i][0]*scale+horz,lionFace4[i][1]*scale+vert);
        }
    glEnd();
    glFlush ();

    //////////////////////------------ END LION FACE 4 ------------//////////////////////


    //////////////////////------------ END SALFORD ------------//////////////////////



}

 void kunci(unsigned char key, int x, int y)
{
   switch (key)
   {
     /* aplikasi berhenti ketika tombol q ditekan */
     case 27 :
     case 'q':
      exit(0);
      break;
     }
    glutPostRedisplay();
}

int main(int argc, char *argv[])
{

    glutInit(&argc, argv);
    glutInitWindowSize(500,800);
    glutInitWindowPosition(100,100);
    glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);
    glutCreateWindow(" 210411100085 - Bima Satria ");
    glutDisplayFunc(display);
    glutKeyboardFunc(kunci);
    myinit();
    glutMainLoop();
    return 0;
}
